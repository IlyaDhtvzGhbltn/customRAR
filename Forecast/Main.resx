<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="textBox1.Text" xml:space="preserve">
    <value>Нажмите кнопку Извлечь,  что бы начать 
извлечение. 

Кнопка Обзор  позволяет выбрать папку
назначения в дереве папок. Имя папки также
можно ввести вручную.

Если папки назначения не существует, то она будет создана автоматически до начала процесса извлечения.

</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>